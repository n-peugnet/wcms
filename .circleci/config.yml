# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
executors:
  standard:
    docker:
      - image: circleci/php:7.2
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # Using the RAM variation mitigates I/O contention
      # for database intensive operations.
      # - image: circleci/mysql:5.7-ram
      #
      # - image: redis:2.8.19

<<<<<<< HEAD
jobs:
  test:
    executor: standard
    steps:
      - checkout
=======
    steps:
      - checkout

      - run: sudo apt update # PHP CircleCI 2.0 Configuration File# PHP CircleCI 2.0 Configuration File sudo apt install zlib1g-dev libsqlite3-dev
>>>>>>> master
      - run: sudo docker-php-ext-install zip

      # Download and cache dependencies
      - restore_cache:
          keys:
            # "composer.lock" can be used if it is committed to the repo
            - v1-dependencies-{{ checksum "composer.json" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
<<<<<<< HEAD
      - run: composer install -n --prefer-dist
=======

      - run: composer install -n --prefer-dist

>>>>>>> master
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      # run tests with phpunit or codecept
      #- run: ./vendor/bin/phpunit
<<<<<<< HEAD
      #- run: ./vendor/bin/codecept build
      #- run: ./vendor/bin/codecept run

  lint:
    executor: standard
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "composer.json" }}
            - v1-dependencies-
      - run: composer install -n --prefer-dist
      - save_cache:
          key: v1-dependencies-{{ checksum "composer.json" }}
          paths:
            - ./vendor

      # install review dog
      - run: curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh| sh -s -- -b ./bin

      # run PHPStan with reviewdog
      - run: ./vendor/bin/phpstan analyse app -l 0 --no-progress --error-format=raw 2>&1 | ./bin/reviewdog -f=phpstan -reporter=github-pr-check || true

      # run PHPCS with reviewdog
      - run: './vendor/bin/phpcs app -n --report=checkstyle 2>&1 | ./bin/reviewdog -f=checkstyle -reporter=github-pr-check || true'

workflows:
  version: 2
  phpunit:
    jobs:
      - test
      - lint
=======
      - run: ./vendor/bin/codecept build
      - run: ./vendor/bin/codecept run
>>>>>>> master
